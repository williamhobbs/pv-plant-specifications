Variable name,Short name,Required for a basic plant model,Units,Variable type,Description,Other notes,pv-terms variable,pv-terms units,pv-terms description
latitude,Latitude,TRUE,degrees,float,"degrees North (decimal, positive for northern hemisphere)","for example, Birmingham AL is 33.51",latitude ,degrees,Latitude between -90 and 90 degrees. Positive north of the equator.
longitude,Longitude,TRUE,degrees,float,"degrees East (decimal, negative for western hemisphere)","for example, Birmingham AL is -89.81",longitude ,degrees,Longitude between -180 to 180 degrees. Positive east of the meridian.
altitude,Altitude,,meters,float,altitude above sea level in meters,,elevation ,m,Elevation of system above sea level.
mount_type,Array mount type,TRUE,N/A,string,"Type of mounting/racking system. Options include: ""fixed"", ""single-axis"", ""dual-axis"", fixed-rooftop"", ""fixed-split"" (e.g., for split East-West systems)",,tracker_type,0,"Tracker type, can be 'fixed', 'single-axis' or 'two-axis'."
backtrack,Backtracking,TRUE,N/A,boolean,"does it use backtracking (""True"") or True-tracking (""False"")","Only valid if mount_type = ""single-axis""",,,
backtrack_fraction,Backtracking fraction,,dimensionless,float,"Target fraction of the array left unshaded by backtracking. E.g., for conventional backtracking where no direct shade is desired, backtrack_fraction is 1.0. To allow half of each row to be shaded, backtrack_fraction = 0.5 would be used.  ",,,,
max_tracker_angle,Tracker rotation limit,,degrees,float,"maximum tracker rotation angle to either size of horizontal. Examples of typical values are 45, 52, or 60 degrees","Only valid if mount_type = ""single-axis"", assumes tracker can rotate the same amount in the east and west direction. Pvlib uses ""max_angle"", but ""max_tracker_angle"" is more descriptive",,,
fixed_azimuth,Fixed array azimuth,TRUE,degrees,float,azimuth of a fixed-tilt array (0=North),"only valid if mount_type = ""fixed"", ""fixed-rooftop"", or ""fixed-split"". note that PVsyst uses opposite convention (0=South)",,,
fixed_tilt,Fixed array tilt,TRUE,degrees,float,tilt of a fixed-tilt array (0=horizontal),"only valid if mount_type = ""fixed"", ""fixed-rooftop"", or ""fixed-split""",,,
axis_azimuth,Tracker rotation axis azimuth,TRUE,degrees,float,A value denoting the compass direction along which the axis of rotation lies. Measured in decimal degrees east of north. [copied from pvlib docs],"only valid if mount_type = ""single-axis""",axis_azimuth ,degrees,"Azimuth of axis of rotation for a single-axis tracking system (e.g. North=0, South=180, East=90, West=270)."
axis_tilt,Tracker rotation axis tilt,,degrees,float,"The tilt of the axis of rotation (i.e, the y-axis defined by axis_azimuth) with respect to horizontal. axis_tilt must be >= 0 and <= 90. [copied from pvlib docs]. Typically 0.","only valid if mount_type = ""single-axis""",axis_tilt ,degrees,Orientation of axis of rotation for a single-axis tracking system relative to horizontal. 0 = horizontal.
gcr,Ground coverage ratio,TRUE,dimensionless,float,Ground coverage ratio. A value denoting the ground coverage ratio of a PV system with multiple rows; i.e. the ratio between the PV array surface area to total ground area. A tracker system with modules 2 meters wide with 6 meters between the tracking axes has a gcr of 2/6=0.333. gcr must be <=1. [modified from pvlib docs],,ground_coverage_ratio ,dimensionless,"A value denoting the ground coverage ratio of a tracker system which utilizes backtracking; i.e. the ratio between the PV array surface area to total ground area. A tracker system with modules 2 meters wide, centered on the tracking axis, with 6 meters between the tracking axes has a gcr of 2/6=0.333. If gcr is not provided, a gcr of 2/7 is default. gcr must be <=1."
gcr_backtrack_setting,Ground coverage ratio value for backtrack settings,,dimensionless,float,The ground coverage ratio value programmed into a system's tracker controllers. Some PV systems use a GCR value slightly higher than the physical design GCR to add a buffer in backtracking and avoid shade that might be caused by uneven terrain or non-uniform tracker axis heights.,,,,
bifacial,Bifacial,TRUE,N/A,boolean,"""True"" if modules are bifacial, otherwise ""False""",,,,
bifaciality_factor,Bifaciality factor,,ratio,float,Ratio of rear performance to front performance under Standard Test Conditions (STC). Typicaly values are 0.65-0.95.,,,,
module_orientation,Module orientation,,N/A,string,"""portrait"" if the short edge of the module is parallel to the ground, ""landscape"" if the long edge of the module is parallel to the ground.",,,,
row_side_num_mods,Number of modules along the row side,,N/A,int,"Number of modules along the side of each row. For example, for a typical ""1P"" (one module in portrait"" tracker, this value is 1.; for ""2P"" tracker or fixed systems, this value is 2, etc.",,,,
cell_type,Cell type,TRUE,N/A,string,"Type of cells, primarily for shade impact modeling. Options are ""crystalline"", ""crystalline_half-cut"", ""thin-film""","May need to add options for shingled cells, various tandem cell configurations, others?",,,
dc_loss_fraction,DC loss fraction,,dimensionless,float,"System losses as a fraction, e.g., 0.10 for 10% losses.",,,,
gamma_pdc,Temperature coefficient of power,,1/C,float,"temperature coefficient of power, typically -0.002 to -0.005 per degree Celsius","Spec sheets often list this in % per deg Celsius, which would need to be divided by 100. Units of Kelvin (K) or degrees Celcius (C) result in the same value.",,,
cross_axis_tilt,Cross axis tilt,,degrees,float,"The angle, relative to horizontal, of the line formed by the intersection between the slope containing the tracker axes and a plane perpendicular to the tracker axes. Cross-axis tilt should be specified using a right-handed convention. For example, trackers with axis azimuth of 180 degrees (heading south) will have a negative cross-axis tilt if the tracker axes plane slopes down to the east and positive cross-axis tilt if the tracker axes plane slopes down to the west. [copied from pvlib docs]",,,,
row_height_center,Row center height,,meters,float,Height of the center point of the row above the ground; must be in the same units as pitch. [copied from pvlib docs] ,"also called pv_row_height. Used for Fuentes temperature model and pvfactors and infinite_sheds bifacial models. DuraMAT pv-terms defines 'height_array' as ""Height above ground of the bottom edge of the module for a fixed tilt system"" and 'height_axis' as ""Height above ground of the axis of rotation for a single axis tracker"" - 'height' here is the same as 'height_axis' in pv-terms.",height_axis ,m,Height above ground of the axis of rotation for a single axis tracker.
row_pitch,Row pitch,,meters,float,"Distance between rows from a common point (e.g., front edge to front edge, NOT front edge to back edge); must be in the same units as height.",also called pv_row_width in pvlib,,,
dc_capacity_inverter,Inverter-level PV array DC capacity,,kW,float,DC rated capacity of the array connected to an inverter under Standard Test Conditions (STC),,,,
dc_capacity_plant,Plant-level PV DC capacity,TRUE,kW,float,DC rated capacity of the plant under Standard Test Conditions (STC),,,,
power_plant_ac_max,Plant max AC power,TRUE,kW,float,Maximum AC power (nameplate) of the plant at the point of metering or interconnection. Equal to or less than the sum of inverter max AC power values for a plant.,,,,
power_inv_ac_max,Inverter max AC power,,kW,float,Maximum AC power output of an inverter (real or active power).,,power_inv_ac_max ,,
modules_per_string,Modules per string,,N/A,int,Number of modules per string,,modules_per_string,dimensionless,Number of modules in series in each string.
strings_per_inverter,Strings per inverter,,N/A,int,Number of strings per inverter,,parallel_strings,dimensionless,Number of parallel strings in an array of modules.
num_inverters,Numer of inverters,,N/A,int,Number of inverters in the plant/asset,,,,
module_model,PV module model name,,N/A,string,The full model of module used. Multiple moded can be separated by a semicolon or similar,"Needs work. Should probably start with strict CEC database names as used in pvlib-python as its own variable, then have other variables for different model name types.",,,
inverter_model,Inverter model name,,N/A,string,The full model of inverter used,"Needs work. Should probably start with strict CEC database names as used in pvlib-python as its own variable, then have other variables for different model name types.",,,
shade_loss_model,Shade loss model type,,N/A,string,"Description of shade loss model. Can be ""linear"", ""non-linear_simple"", or ""non-linear_simple_twin_module"".","Partially redundant with ""cell_type"", but allowing for different model options could be useful.",,,
n_cells_up,Number of cells up,,N/A,int,"Number of cells going up the long axis of the module. 12 is common for 72 cell modules, 24 or 26 is common for twin modules with half-cut cells",,,,
module_length,Module length,,meters,float,Length of the module in meters (long axis),,,,
module_width,Module width,,meters,float,Width of the module in meters (short axis),,,,
module_spec_url,Module Spec Sheet URL,,N/A,string,Publicly available specification sheet website URL,,,,
default_site_transposition_model,Default Site Transposition Model,,N/A,string,"Default transposition model to be used for the site. Can be ""isotropic"", ""haydavies"", ""perez"", ""perez-driesse""",,,,
,[currently not used],,,,,,height_array ,m,Height above ground of the bottom edge of the module for a fixed tilt system.
,[currently not used],,,,,,gamma_pmp ,W/Â°C,Temperature coefficient of power at maximum power point and reference conditions.
,[currently not used],,,,,,surface_azimuth ,degrees,"Surface azimuth angles. The azimuth convention is defined as degrees east of north (e.g. North=0, South=180, East=90, West=270)"
,[currently not used],,,,,,surface_tilt ,degrees,"Surface tilt angle. The tilt angle is defined as degrees from horizontal (e.g. surface facing up = 0, surface facing horizon = 90)"
